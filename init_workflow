#!/bin/sh


ctags_configs(){
 echo "# ctags configs"
 echo
 echo "Check if ctags is installed"
 ctags --version | grep "Exuberant Ctags" > /dev/null 2>&1 || { echo "exuberant-ctags package not installed. Please install it and execute this script again to continue from this step (ctags_configs). Aborting. ";  exit 1;}
 echo "Create an alias to execute ctags in git hooks"
 git config --global alias.ctags '!.git/hooks/ctags'
 echo "Create a symlink to .ctags file"
 ln -s $PWD/ctags_configs $HOME/.ctags
 echo 
 echo "# Done"
 echo 
}


nodejs_configs(){
 echo "# node configs"
 echo
 echo "Check if node is installed"
 node -v | grep "^v" > /dev/null 2>&1 || { echo "node js not installed. Please install it and execute this script again to continue from this step (nodejs_configs). Aborting. ";  exit 1;}
 echo "install needed global packages"
 npm install -g eslint eslint-plugin-json hapi-app-generator pm2 npm-check-updates n
 echo "add npm author informations"
 npm set init.author.name "Giovane Boaviagem"
 npm set init.author.email "giovanebribeiro@gmail.com"
 npm set init.author.url "http://about.me/giovanebribeiro"
 echo "save npm credentials"
 npm adduser
 echo "create a symlink to .eslintrc file"
 ln -s $PWD/eslintrc $HOME/.eslintrc
 echo 
 echo "# Done"
 echo 
}

echo "##"
echo "# Init Workflow"
echo "##"
echo 
if [ ! -f $HOME/checkpoint ]; then
 checkpoint 1
else
 CHECKPOINT=`cat $HOME/checkpoint`
fi


if [ "$CHECKPOINT" = "1" ] ; then
 git_configs
 checkpoint 2
 vim_configs
 checkpoint 3
 ctags_configs 
 checkpoint 4
 tmux_configs
 checkpoint 5
 nodejs_configs
 rm $HOME/checkpoint
elif [ "$CHECKPOINT" = "2" ]; then
 vim_configs
 checkpoint 3
 ctags_configs
 checkpoint 4
 tmux_configs
 checkpoint 5
 nodejs_configs
 rm $HOME/checkpoint
elif [ "$CHECKPOINT" = "3" ]; then
 ctags_configs
 checkpoint 4
 tmux_configs
 checkpoint 5
 nodejs_configs
 rm $HOME/checkpoint
elif [ "$CHECKPOINT" = "4" ]; then
  tmux_configs
  checkpoint 5
  nodejs_configs
  rm $HOME/checkpoint
elif [ "$CHECKPOINT" = "5" ]; then
  nodejs_configs
  rm $HOME/checkpoint
else
 echo "unknown checkpoint (checkpoint = $CHECKPOINT). Please try again."
fi

