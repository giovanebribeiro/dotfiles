""""""""
""" 
""" .vimrc
""" 
""""""""

" Sometimes useless. Reason: https://stackoverflow.com/a/5845583
set nocompatible
" Filetype detection. It's needed when working with plugin managers
filetype off

""
" Plugin list
""
set rtp+=$HOME/.vim/bundle/Vundle.vim
call vundle#begin('$HOME/.vim/bundle/')

Plugin 'VundleVim/Vundle.vim' " Vundle manages vundle
Plugin 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' } " a Fuzzy finder
Plugin 'junegunn/fzf.vim'                                           " vim plugin for fzf
Plugin 'airblade/vim-gitgutter'                                     " set git marks for file modifications
Plugin 'jreybert/vimagit'                                           " a better git status
Plugin 'tpope/vim-fugitive'                                         " more git funcionality, specially git blame
Plugin 'jiangmiao/auto-pairs'                                       " automatic closure for (, {, [, etc
Plugin 'editorconfig/editorconfig-vim'                              " editorConfig (https://editorconfig.org/) support
Plugin 'morhetz/gruvbox'                                            " retro theme
Plugin 'itchyny/lightline.vim'                                      " theme for statusbar
Plugin 'shinchu/lightline-gruvbox.vim'                              " lightline theme for gruvbox
Plugin 'taglist.vim'                                                " Source code browser (uses ctags)
Plugin 'nathanaelkane/vim-indent-guides'                            " I can see clearly now ... the indent lines
Plugin 'JamshedVesuna/vim-markdown-preview'                         " A nice markdown preview
Plugin 'ycm-core/YouCompleteMe'                                     " Code Completion engine
Plugin 'whatyouhide/vim-lengthmatters'                              " Highlights when text line is too big
Plugin 'vim-syntastic/syntastic'                                    " Syntax checker
Plugin 'ctrlpvim/ctrlp.vim'                                         " A better file finder

call vundle#end()            " required
filetype plugin indent on    " required
" End of plugin list

""
" Performance configurations
""
"more characters will be sent to the screen for redrawing
set ttyfast
"time waited for key press(es) to complete. It makes for a faster key response
set ttimeout
set ttimeoutlen=50
"disable file backup (if you don't need it)
set nobackup
set noswapfile
" Update sign column every quarter of second
set updatetime=250


""
" General configurations
""
"file encoding
set encoding=utf-8
set fileencoding=utf-8
set backspace=indent,eol,start " make backspace behave properly in insert mode
set showcmd " display incomplete commands
"a better menu in command mode
set wildmenu
set wildmode=longest:full,full
set hidden " hide buffers instead of closing them even if they contain unwritten changes
set nowrap " disable soft wrap for lines
set relativenumber " display relative line numbers (much better to make jumps between lines)
"new splits will be at the bottom or to the right side of the screen
set splitbelow
set splitright
set autoindent " always set autoindenting on
set pastetoggle=<F5> " allow paste with the mouse when press F5 (in insert mode)
"incremental search
set incsearch
highlight search
set hlsearch 
"searches are case insensitive unless they contain at least one capital letter
set ignorecase
set smartcase
" enable taglist
let Tlist_Use_Right_Window = 1
set t_ut=      " cleaning this var to fix vim background inside tmux (https://superuser.com/a/562423)
let vim_markdown_preview_toggle=2 " specific for vim-markdown-preview: enable preview on buffer write (:w)
" textwidth
set textwidth=100
g:lengthmatters_on_by_default=1
g:lengthmatters_start_at_column=101
" sessions management
let g:sessions_dir = '$HOME/.vim/sessions'
" syntastic configurations
try
  set statusline+=%#warningmsg#
  set statusline+=%{SyntasticStatuslineFlag()}
  set statusline+=%*

  let g:syntastic_javascript_checkers = [ "eslint" ]
  let g:syntastic_always_populate_loc_list = 1
  let g:syntastic_auto_loc_list = 1
  let g:syntastic_check_on_open = 1
  let g:syntastic_check_on_wq = 0
catch /^Vim\%((\a\+)\)\=:E185/
  " deal with it
endtry
" Ctrl-P
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
" recognize specific files with known language syntax
"autocmd BufNewFile,BufRead *.json set ft=javascript
"autocmd BufNewFile,BufRead *.wsdl set ft=xml

""
" Look and Feel
""
set noshowmode           " removes the -- INSERT -- (we don't needed it, right?)
"needed to enable italic in vim
let &t_ZH="\e[3m"
let &t_ZR="\e[23m"
syntax on                " enable syntax
set t_Co=256             " terminal colors
set background=dark      " background color :P
try                      " put inside try block all gruvbox configs
  let g:gruvbox_italic=1 " this must be BEFORE colorscheme
  colorscheme gruvbox    " vim theme of choice
catch /^Vim\%((\a\+)\)\=:E185/
  " deal with it
endtry
set laststatus=2 " always display the status line
let g:lightline = {}
let g:lightline.colorscheme = 'gruvbox'
" netrw (vim native file explorer)
let g:netrw_liststyle=3
let g:netrw_browse_split=4
let g:netrw_winsize=25
let g:netrw_altv=1
" code indentation (https://stackoverflow.com/a/1878983)
set ts=2 sw=2 et
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_start_level=2
let g:indent_guides_guide_size=1

""
" Shortcuts and keybindings
""
" Disable the arrow keys 
inoremap <Up> <NOP>
inoremap <Down> <NOP>
inoremap <Left> <NOP>
inoremap <Right> <NOP>
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>
" some custom shortcuts
let mapleader=","                           " behold the new <Leader> key
nmap <Leader>r  :source %<CR>                                                  " reload the current file
nmap <Leader>gn <Plug>GitGutterNextHunk                                        " git next
nmap <Leader>gp <Plug>GitGutterPrevHunk                                        " git previous
nmap <Leader>ga <Plug>GitGutterStageHunk                                       " git add (chunk)
nmap <Leader>gu <Plug>GitGutterUndoHunk                                        " git undo (chunk)
nmap <Leader>gs :Magit<CR>      	                                             " git status
nmap <Leader>gb :Gblame<CR>                                                    " git blame
nmap <Leader>gc :Gcommit %<CR>                                                           " git commit the current file
nmap <Leader>t  :TlistToggle<CR>                                                         " show taglist pane
nmap <Leader>e  :Vexplore<CR>                                                            " show file explorer
nmap <Leader>i  gg=G                                                                     " fix file indentation
" Save session
exec 'noremap <Leader>ss :mks! ' . g:sessions_dir . '/*.vim<C-D><BS><BS><BS><BS><BS>'    
" Restore session
exec 'noremap <Leader>sr :so ' . g:sessions_dir . '/*.vim<C-D><BS><BS><BS><BS><BS>'     
" Mapping selecting mappings
nmap <leader><tab> <plug>(fzf-maps-n)
xmap <leader><tab> <plug>(fzf-maps-x)
omap <leader><tab> <plug>(fzf-maps-o)
" Insert mode completion
imap <c-x><c-w> <plug>(fzf-complete-word)
imap <c-x><c-p> <plug>(fzf-complete-path)
imap <c-x><c-f> <plug>(fzf-complete-file-ag)
imap <c-x><c-l> <plug>(fzf-complete-line)
