[user]
  name = Giovane Boaviagem
  email = giovanebribeiro@gmail.com
[color]
  diff = auto
  grep = auto
  interactive = auto
  status = auto
  branch = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "status"]
  added = yellow
  changed = green
  untracked = white
[pretty]
  changelog = format:* %h %s 
  history = format:'%Cred%h %C(magenta)(%an)%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)%Creset'
[alias]
  ##
  # DIFF
  ##
  di=diff
  # shows only the diff from the files in the staging area
  staged=diff --cached
  # shows the diff between the staging area and your modified files.
  di-staged = !git diff-index --cached --name-only --diff-filter=ACMR HEAD | xargs git di
  # Show the list of modified files for a given commit
  di-commit = diff-tree --no-commit-id --name-status -r
  # gives you the diff between your working tree and the last commit
  dilc = diff --cached HEAD^
  ##
  # LOGS
  ##
  # logs in a must beautiful form
  ll = log --color --graph --pretty=history --abbrev-commit
  # log for a single file
  lf = log -u
  # more detailed logs
  ls = log --oneline --reverse --no-merges --stat
  ##
  # TAGS
  ##
  tt = for-each-ref --sort=-taggerdate --count=5 --format '%(refname) (%(taggerdate))\n===\n\n%(subject)\n\n%(body)' refs/tags
  ##
  # PUSH/PULL/FETCH
  ##
  f = fetch --all -v --prune
  ps = push --follow-tags
  psuo = push --follow-tags --set-upstream origin 
  # fetch and push all locally-tracked remote branches
  up = pull
  # applies the changes from remote only when it would be possible via fast forward
  ff = pull --ff-only
  ##
  # COMMIT
  ##
  cam = commit -am
  cm = commit -m 
  ##
  # CHECKOUT
  ##
  co = checkout
  cob = checkout -b
  # Reverts changes for files in 'staged' area
  co-staged=!git diff-index --cached --name-only --diff-filter=ACMR HEAD | xargs git di
  ##
  # OTHERS
  ##
  # prune already merged branches
  rip = ! bash $HOME/.clean_pruned_branches.sh
  st = status -sb
  # Show active users on repo in last 6 months
  active = shortlog --numbered --email --summary --no-merges --since='6 months'
  a = add
  aa = add --all
  # collect the commits since the last tag
  changelog = "!git log $(git describe --tags --abbrev=0)..HEAD --pretty=changelog"
  alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
  # allows re-write the entire feature commits. Useful to cleanup local branch history before a pull
  # request
  faxina = "! git merge-base $(git rev-parse --abbrev-ref HEAD) $1 | git rebase -i"
[core]
  editor = /usr/bin/vim
	excludesfile = /Users/giovane/.gitignore_global
[push]
  default = matching
[merge]
  tool = vimdiff
  conflictstyle = diff3
[mergetool]
  prompt = false
[github]
  user = giovanebribeiro
# Specific configurations for my work. Include a second gitconfig if repo inside ~/workspace
[includeIf "gitdir:~/workspace/work/"]
  path = ~/workspace/work/.gitconfig
